<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright [2016] Charlie Black
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:gfe="http://www.springframework.org/schema/gemfire"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/gemfire http://www.springframework.org/schema/gemfire/spring-gemfire.xsd">

    <bean id="yamlProperties" class="org.springframework.beans.factory.config.YamlPropertiesFactoryBean">
        <property name="resources" value="classpath:config/application.yml"/>
    </bean>

    <bean id="mySecondConfigurer"
          class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
          p:properties-ref="yamlProperties"/>

    <import resource="classpath:/config/common-context.xml"/>

    <bean id="geodeGeometryFactory" class="org.apache.geode.geospatial.domain.PdxLocationEventGeometryFactory">
        <property name="geometryFactory" ref="geometryFactory"/>
    </bean>

    <bean id="gemfireProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="locators">${demo.locators:localhost[10334]}</prop>
                <prop key="start-locator">${demo.startLocator:false}</prop>
                <prop key="mcast-port">0</prop>
                <prop key="jmx-manager">${demo.jmx-manager:false}</prop>
                <prop key="jmx-manager-start">${demo.jmx-manager-start:false}</prop>
            </props>
        </property>
    </bean>

    <bean id="geospaitalIndex" class="org.apache.geode.geospatial.index.BasicQuadTreeImpl">
        <property name="geodeGeometryFactory" ref="geodeGeometryFactory"/>
    </bean>

    <gfe:disk-store id="pdxDiskStore"/>
    <gfe:disk-store id="geoSpatialDiskStore"/>

    <gfe:cache pdx-disk-store="pdxDiskStore"
               pdx-read-serialized="true"
               pdx-persistent="true"
               critical-heap-percentage="75"
               eviction-heap-percentage="70" properties-ref="gemfireProperties"/>
    <gfe:partitioned-region id="geoSpatialRegion"
                            data-policy="PERSISTENT_PARTITION">
        <gfe:async-event-queue batch-conflation-enabled="true"
                               batch-size="10"
                               batch-time-interval="10"
                               order-policy="KEY"
                               dispatcher-threads="1">
            <!--
                NOTE: I over configured the queue as to open a discussion on what can be done with an async queue.

                Above equals : "dispatcher-threads" queues that are partitioned on key.   Each queue will fire when
                they have "batch-size" elements or "batch-time-interval" ms whichever comes first.
            -->
            <gfe:async-event-listener>
                <bean class="org.apache.geode.geospatial.grid.IndexMaintanance">
                    <property name="geospaitalIndex" ref="geospaitalIndex"/>
                </bean>
            </gfe:async-event-listener>
        </gfe:async-event-queue>
        <gfe:partition-listener>
            <bean class="org.apache.geode.geospatial.grid.IndexHAMaintenance">
                <property name="geospaitalIndex" ref="geospaitalIndex"/>
            </bean>
        </gfe:partition-listener>
    </gfe:partitioned-region>
    <gfe:function-service>
        <gfe:function>
            <bean class="org.apache.geode.geospatial.function.GeoQueryFunction">
                <property name="geospaitalIndex" ref="geospaitalIndex"/>
                <property name="chunkSize" value="1000"/>
                <property name="region" ref="geoSpatialRegion"/>
            </bean>
            <bean class="org.apache.geode.geospatial.function.ClearRegion"/>
        </gfe:function>
    </gfe:function-service>
    <gfe:cache-server port="0"/>

</beans>